#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

check_writeable () {
    local target="$1"
    local targetParent="$(dirname "$target")"

    if [[ -e "$target" ]]; then
        if [[ ! -w "$target" ]]; then
            echo "file is not writeable: $target" 1>&2
            exit 1
        fi
    else
        if [[ ! -w "$targetParent" ]]; then
            echo "folder is not writeable: $targetParent" 1>&2
            exit 1
        fi
    fi
}

check_writeable "$HOME/.bashrc.wskb"
check_writeable "$HOME/.inputrc"

edit_bashrc=0
if [[ ( ! -e "$HOME/.bashrc" ) || ( ! grep -q  ".bashrc.wskb" "$HOME/.bashrc" ) ]]; then
    edit_bashrc=1
    check_writeable "$HOME/.bashrc"
fi

edit_bash_profile=0
if [[ ( ! -e "$HOME/.bash_profile" ) || ( ! grep -q  ".bashrc" "$HOME/.bash_profile" ) ]]; then
    edit_bash_profile=1
    edit_bashrc
    check_writeable "$HOME/.bash_profile"
fi

if [[ $edit_bash_profile -eq 1 ]]; then
    echo "Updating $HOME/.bash_profile"
    echo >> "$HOME/.bash_profile"
    echo 'source $HOME/.bashrc' >> "$HOME/.bash_profile"
fi

if [[ $edit_bashrc -eq 1 ]]; then
    echo "Updating $HOME/.bashrc"
    echo >> "$HOME/.bashrc"
    echo 'source $HOME/.bashrc.wskb' >> "$HOME/.bashrc"
fi
echo "Updating $HOME/.bashrc.wskb"
cat > "$HOME/.bashrc.wskb" <<'END_BASHRC_WSKB'
#::# preferences

export PAGER=less
export VISUAL=vi
export EDITOR=vi

# turn off control flow (Ctrl-S Ctrl-Q)
stty -ixon

# turn off beep on extra tabbing
shopt -s no_empty_cmd_completion

#::# history

HISTFILESIZE=10000
HISTSIZE=$HISTFILESIZE

# append not overwrite
shopt -s histappend
# ignore repeats of last
HISTCONTROL=ignoredups
# flush history immediately
PROMPT_COMMAND="${PROMPT_COMMAND:+${PROMPT_COMMAND};}history -a"

#::# shorthand

alias md='mkdir'
alias rd='rmdir'

function mcd()
{
	mkdir -pv "$1" && cd "$1"
}

#::# default options

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias ls='ls -F'
alias la='ls -alh'
alias ll='ls -Alh'
alias diff='diff -u'
alias df='df -h'
alias du='du -h'

#::# conveniences

function size()
{
	if [[ $# -gt 0 ]]; then
		du -sc "$@" 2>/dev/null | sort -rh
	else
		du -sc * 2>/dev/null | sort -rh
	fi
}

function explode()
{
	if [[ -z "$1" ]]; then
		echo "no file provided"
		return 1
	fi
	
	mkdir "$1.contents"
	case `file -b --mime "$1"` in
		application/zip*)
			unzip -d "$1.contents" "$1"
		;;
		application/x-tar*)
			tar -xvf "$1" -C "$1.contents"
		;;
		application/gzip* | application/x-gzip*)
			case "$1" in
				*.tar.gz|*.tgz)
					tar -xvzf "$1" -C "$1.contents"
				;;
				*)
					cp "$1" "$1.contents"
					cd "$1.contents"
					gunzip *
					cd -
				;;
			esac
		;;
		application/x-bzip2*)
			case "$1" in
				*.tar.bz2|*.tbz)
					tar -xvjf "$1" -C "$1.contents"
				;;
				*)
					cp "$1" "$1.contents"
					cd "$1.contents"
					bunzip2 *
					cd -
				;;
			esac
		;;
		*)
			echo "File format not understood"
			rmdir "$1.contents"
		;;
	esac

	if [[ -d "$1.contents" ]]; then
		cd "$1.contents"
	fi
}

_setPrompt()
{
	if [ -n "$TERM" ] && [ 'dumb' != "$TERM" ]; then
		
		local PROMPT_FC="7"
		local PROMPT_BC="0"
		
		if [[ -f "$HOME/.promptColor" ]]; then
			local PROMPT_C=`cat "$HOME/.promptColor"`
			PROMPT_FC="${PROMPT_C:0:1}"
			PROMPT_BC="${PROMPT_C:1:1}"
		fi
		
		PS1="$WINDOW_TITLE"
		PS1="$PS1\[\e[1;3${PROMPT_FC};4${PROMPT_BC}m\]" # prompt color on
		PS1="$PS1\u@\h" # user@host
		PS1="$PS1\[\e[0m\]" # prompt color off
		PS1="$PS1:\w" # working directory
		PS1="$PS1\n" # newline
		PS1="$PS1\[\e[1;4\$([[ \$? = 0 ]] && printf 0 || printf 1)m\]" # bg red if last command errored
		PS1="$PS1>" # prompt
		PS1="$PS1\[\e[0m\]" # error color off
		export PS1
	fi
}

# xterm/mintty window title
# see http://www.davidpashley.com/articles/bash-prompts.html

case "$TERM" in
	xterm*)
		setWindowTitle ()
		{
			WINDOW_TITLE="\[\e]0;$1\007\]"
			echo -ne "\033]0;$1\007"
			_setPrompt
		}
		WINDOW_TITLE="\[\e]0;new\007\]"
		;;
	*)
		setWindowTitle ()
		{
			echo "not an xterm"
		}
		;;
esac

setWindowTitleFromPWD () {
	setWindowTitle "`basename "$PWD"`"
}

sssh () {
	setWindowTitle "$1"
	ssh "$@"
}

_setPrompt
alias wskb-refresh-bash="curl -sfL curl -sfL https://raw.githubusercontent.com/wskb/autosetup/refs/heads/dist/bash-setup | bash -"
END_BASHRC_WSKB
echo "Updating $HOME/.inputrc"
cat > "$HOME/.inputrc" <<'END_INPUTRC'
set completion-ignore-case on
set show-all-if-ambiguous on
set completion-query-items 250
END_INPUTRC
